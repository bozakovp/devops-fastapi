helm install vault hashicorp/vault --set "ui.enabled=true"

kubectl exec -ti vault-0 -- vault operator init -key-shares=1 -key-threshold=1 -pgp-keys="keybase:hashicorp,keybase:jefferai,keybase:sethvargo"

[vagrant@control-plane vault]$ kubectl -n application exec -ti vault-0 -- vault operator init -key-shares=1 -key-threshold=1
Unseal Key 1: XyGMipZkysTf4tgKoJTRXLaV8y1sp7sSc3/J/LVcpu0=

Initial Root Token: hvs.SqAhzHG0IjM0AvDdUSmbaWQb

Vault initialized with 1 key shares and a key threshold of 1. Please securely
distribute the key shares printed above. When the Vault is re-sealed,
restarted, or stopped, you must supply at least 1 of these keys to unseal it
before it can start servicing requests.

Vault does not store the generated root key. Without at least 1 keys to
reconstruct the root key, Vault will remain permanently sealed!

It is possible to generate new unseal keys, provided you have a quorum of
existing unseal keys shares. See "vault operator rekey" for more information.


kubectl exec vault-0 -- vault operator unseal $VAULT_UNSEAL_KEY




vagrant@control-plane vault]$ kubectl exec -ti vault-0 -- vault operator init
Unseal Key 1: oWNKIPzVOzWWZLlFi+zJZIX7j2xLGpmAe60VtQASBhrH
Unseal Key 2: sSPGoHot14Yhv/EvGjseDAbqIgxIHYIBnmUSPlOx8cSh
Unseal Key 3: RS5PxGLsWuYFGRXpZ6cb890QlxoFWvT1MB9e3WXCWmqm
Unseal Key 4: cmFnNbC+JvjcvdnuCGkmWNkpKzLzK94aRleBQlp3fQr2
Unseal Key 5: kAiQC4eOLou21jDQ2m9UvARYqlZTQr6DqMmnMV5+UTQm

Initial Root Token: hvs.vUJI839n0PzD3m4ILUvkDWmE

Vault initialized with 5 key shares and a key threshold of 3. Please securely
distribute the key shares printed above. When the Vault is re-sealed,
restarted, or stopped, you must supply at least 3 of these keys to unseal it
before it can start servicing requests.

Vault does not store the generated root key. Without at least 3 keys to
reconstruct the root key, Vault will remain permanently sealed!

It is possible to generate new unseal keys, provided you have a quorum of
existing unseal keys shares. See "vault operator rekey" for more information.


-------

NAME: my-release
LAST DEPLOYED: Thu Oct 20 07:48:09 2022
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
CHART NAME: mysql
CHART VERSION: 9.4.1
APP VERSION: 8.0.31

** Please be patient while the chart is being deployed **

Tip:

  Watch the deployment status using the command: kubectl get pods -w --namespace default

Services:

  echo Primary: my-release-mysql.default.svc.cluster.local:3306

Execute the following to get the administrator credentials:

  echo Username: root
  MYSQL_ROOT_PASSWORD=$(kubectl get secret --namespace default my-release-mysql -o jsonpath="{.data.mysql-root-password}" | base64 -d)

To connect to your database:

  1. Run a pod that you can use as a client:

      kubectl run my-release-mysql-client --rm --tty -i --restart='Never' --image  docker.io/bitnami/mysql:8.0.31-debian-11-r0 --namespace default --env MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD --command -- bash

  2. To connect to primary service (read/write):

      mysql -h my-release-mysql.default.svc.cluster.local -uroot -p"$MYSQL_ROOT_PASSWORD"
